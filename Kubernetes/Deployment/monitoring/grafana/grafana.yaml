apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
spec:
  ports:
  - port: 3000
    targetPort: 3000
  selector:
    app: grafana
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: monitoring
spec:
  replicas: 1
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana
        name: grafana
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: ui
        env:
          - name: GF_AUTH_BASIC_ENABLED
            value: "false"
          - name: GF_AUTH_ANONYMOUS_ENABLED
            value: "true"
          - name: GF_AUTH_ANONYMOUS_ORG_ROLE
            value: Admin
#          - name: GF_DASHBOARDS_JSON_ENABLED
#            value: "true"
#          - name: GF_DASHBOARDS_JSON_PATH
#            value: /dashboards
          - name: GF_PATHS_DATA
            value: /data
        resources:
          limits:
            memory: 2048Mi
            cpu: 2048m
          requests:
            memory: 100Mi 
            cpu: 100m             
        volumeMounts:
        - name: gf-data
          mountPath: /data
        - name: gf-dashboards
          mountPath: /dashboards
        - name: localtime
          mountPath: /etc/localtime          
      # Volumes and config maps
      volumes:
      - name: gf-data
        persistentVolumeClaim:
          claimName: gf-data-pvc
      - name: gf-dashboards
        configMap:
          name: grafana-dashboard
      - name: localtime
        hostPath:
          path: /etc/localtime
          